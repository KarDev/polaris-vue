{
  "props": [
    {
      "name": "queryValue",
      "type": "string | undefined",
      "required": false,
      "description": "Currently entered text in the query field",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "isFlushWhenSticky",
      "type": "boolean | undefined",
      "required": false,
      "description": "If the component should go flush to the top of the page when sticking",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "canCreateNewView",
      "type": "boolean | undefined",
      "required": false,
      "description": "Whether the index supports creating new views",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "filters",
      "type": "FilterInterface[]",
      "required": true,
      "description": "Available filters added to the filter bar. Shortcut filters are pinned to the front of the bar.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "array",
        "type": "FilterInterface[]",
        "schema": [
          {
            "kind": "object",
            "type": "FilterInterface",
            "schema": {
              "name": {
                "name": "name",
                "global": false,
                "description": "A unique key used to identify the filter",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              },
              "label": {
                "name": "label",
                "global": false,
                "description": "The label for the filter",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              },
              "filter": {
                "name": "filter",
                "global": false,
                "description": "The markup for the given filter",
                "tags": [],
                "required": true,
                "type": "VueNode",
                "declarations": [],
                "schema": "VueNode"
              },
              "shortcut": {
                "name": "shortcut",
                "global": false,
                "description": "Whether or not the filter should have a shortcut popover displayed",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "boolean | undefined",
                  "schema": [
                    "undefined",
                    "false",
                    "true"
                  ]
                }
              },
              "pinned": {
                "name": "pinned",
                "global": false,
                "description": "Whether or not the filter should be pinned, permanently displaying the filter",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              },
              "disabled": {
                "name": "disabled",
                "global": false,
                "description": "Whether or not the filter is disabled",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              },
              "hideClearButton": {
                "name": "hideClearButton",
                "global": false,
                "description": "",
                "tags": [
                  {
                    "name": "default",
                    "text": "false\nWhether or not the clear button is displayed"
                  }
                ],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              },
              "onAction": {
                "name": "onAction",
                "global": false,
                "description": "Optional callback when filter is pressed",
                "tags": [],
                "required": false,
                "type": "(() => void) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "(() => void) | undefined",
                  "schema": [
                    "undefined",
                    {
                      "kind": "event",
                      "type": "(): void"
                    }
                  ]
                }
              },
              "suffix": {
                "name": "suffix",
                "global": false,
                "description": "Suffix source",
                "tags": [],
                "required": false,
                "type": "VueNode",
                "declarations": [],
                "schema": "VueNode"
              },
              "section": {
                "name": "section",
                "global": false,
                "description": "Optional section heading that this filter will go under",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "string | undefined",
                  "schema": [
                    "undefined",
                    "string"
                  ]
                }
              },
              "hidden": {
                "name": "hidden",
                "global": false,
                "description": "Optional: hides the filter from the dropdown",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              }
            }
          }
        ]
      }
    },
    {
      "name": "selected",
      "type": "number",
      "required": true,
      "description": "The index of the currently selected Tab.",
      "tags": [],
      "declarations": [],
      "schema": "number"
    },
    {
      "name": "loading",
      "type": "boolean | undefined",
      "required": false,
      "description": "Whether an asyncronous task is currently being run.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "disabled",
      "type": "boolean | undefined",
      "required": false,
      "description": "Will disable all the elements within the IndexFilters component",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "primaryAction",
      "type": "IndexFiltersPrimaryAction | undefined",
      "required": false,
      "description": "The primary action to display",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "IndexFiltersPrimaryAction | undefined",
        "schema": [
          "undefined",
          {
            "kind": "object",
            "type": "IndexFiltersPrimaryAction",
            "schema": {
              "type": {
                "name": "type",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "\"cancel\" | \"save\" | \"save-as\"",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "\"cancel\" | \"save\" | \"save-as\"",
                  "schema": [
                    "\"cancel\"",
                    "\"save\"",
                    "\"save-as\""
                  ]
                }
              },
              "onAction": {
                "name": "onAction",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "(name: string) => Promise<boolean>",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(name: string): Promise<boolean>",
                  "schema": []
                }
              },
              "disabled": {
                "name": "disabled",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "boolean | undefined",
                  "schema": [
                    "undefined",
                    "false",
                    "true"
                  ]
                }
              },
              "loading": {
                "name": "loading",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              }
            }
          }
        ]
      }
    },
    {
      "name": "queryPlaceholder",
      "type": "string | undefined",
      "required": false,
      "description": "Placeholder text for the query field.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "appliedFilters",
      "type": "AppliedFilterInterface[] | undefined",
      "required": false,
      "description": "Applied filters which are rendered as filter pills. The remove callback is called with the respective key.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "AppliedFilterInterface[] | undefined",
        "schema": [
          "undefined",
          {
            "kind": "array",
            "type": "AppliedFilterInterface[]",
            "schema": [
              {
                "kind": "object",
                "type": "AppliedFilterInterface",
                "schema": {
                  "name": {
                    "name": "name",
                    "global": false,
                    "description": "A unique key used to identify the applied filter",
                    "tags": [],
                    "required": true,
                    "type": "string",
                    "declarations": [],
                    "schema": "string"
                  },
                  "label": {
                    "name": "label",
                    "global": false,
                    "description": "A label for the applied filter",
                    "tags": [],
                    "required": true,
                    "type": "string",
                    "declarations": [],
                    "schema": "string"
                  },
                  "onRemove": {
                    "name": "onRemove",
                    "global": false,
                    "description": "Callback when the remove button is pressed",
                    "tags": [],
                    "required": true,
                    "type": "(key: string) => void",
                    "declarations": [],
                    "schema": {
                      "kind": "event",
                      "type": "(key: string): void",
                      "schema": []
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "hideFilters",
      "type": "boolean | undefined",
      "required": false,
      "description": "Hide filter bar for applied filters.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "hideQueryField",
      "type": "boolean | undefined",
      "required": false,
      "description": "Hide the query field.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "disableQueryField",
      "type": "boolean | undefined",
      "required": false,
      "description": "Will disable just the query field",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "borderlessQueryField",
      "type": "boolean | undefined",
      "required": false,
      "description": "Whether the text field should be borderless. Should be true when used as part of the IndexFilters component.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "mountedState",
      "type": "TransitionStatus | undefined",
      "required": false,
      "description": "",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "TransitionStatus | undefined",
        "schema": [
          "undefined",
          "\"entering\"",
          "\"entered\"",
          "\"exiting\"",
          "\"exited\"",
          "\"unmounted\""
        ]
      }
    },
    {
      "name": "closeOnChildOverlayClick",
      "type": "boolean | undefined",
      "required": false,
      "description": "Whether the filter should close when clicking inside another Popover.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "selectedViewName",
      "type": "string | undefined",
      "required": false,
      "description": "",
      "tags": [
        {
          "name": "deprecated",
          "text": "The name of the currently selected view"
        }
      ],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "tabs",
      "type": "TabProps[]",
      "required": true,
      "description": "The items that map to each Tab.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "array",
        "type": "TabProps[]",
        "schema": [
          {
            "kind": "object",
            "type": "TabProps",
            "schema": {
              "id": {
                "name": "id",
                "global": false,
                "description": "The unique identifier for the Tab",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              },
              "content": {
                "name": "content",
                "global": false,
                "description": "The name of the Tab",
                "tags": [],
                "required": true,
                "type": "string",
                "declarations": [],
                "schema": "string"
              },
              "panelID": {
                "name": "panelID",
                "global": false,
                "description": "A unique identifier for the panel",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "string | undefined",
                  "schema": [
                    "undefined",
                    "string"
                  ]
                }
              },
              "accessibilityLabel": {
                "name": "accessibilityLabel",
                "global": false,
                "description": "The accessible label for the Tab, if the name alone does not give enough context",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [],
                "schema": "string | undefined"
              },
              "badge": {
                "name": "badge",
                "global": false,
                "description": "A badge to render next to the view name",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [],
                "schema": "string | undefined"
              },
              "url": {
                "name": "url",
                "global": false,
                "description": "Optional URL if the Tab points to a location",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [],
                "schema": "string | undefined"
              },
              "isLocked": {
                "name": "isLocked",
                "global": false,
                "description": "If true, will remove the ability to edit/rename/delete the view.",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "boolean | undefined",
                  "schema": [
                    "undefined",
                    "false",
                    "true"
                  ]
                }
              },
              "disabled": {
                "name": "disabled",
                "global": false,
                "description": "Whether the Tab is disabled",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              },
              "actions": {
                "name": "actions",
                "global": false,
                "description": "A list of actions which map to actions that a merchant can take with this",
                "tags": [],
                "required": false,
                "type": "TabActionDescriptor[] | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "TabActionDescriptor[] | undefined",
                  "schema": [
                    "undefined",
                    {
                      "kind": "array",
                      "type": "TabActionDescriptor[]",
                      "schema": [
                        {
                          "kind": "object",
                          "type": "TabActionDescriptor",
                          "schema": {
                            "type": {
                              "name": "type",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "TabAction",
                              "declarations": [],
                              "schema": {
                                "kind": "enum",
                                "type": "TabAction",
                                "schema": [
                                  "\"delete\"",
                                  "\"rename\"",
                                  "\"edit\"",
                                  "\"edit-columns\"",
                                  "\"duplicate\""
                                ]
                              }
                            },
                            "onAction": {
                              "name": "onAction",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "((name: string) => void) | undefined",
                              "declarations": [],
                              "schema": {
                                "kind": "enum",
                                "type": "((name: string) => void) | undefined",
                                "schema": [
                                  "undefined",
                                  {
                                    "kind": "event",
                                    "type": "(name: string): void",
                                    "schema": []
                                  }
                                ]
                              }
                            },
                            "onPrimaryAction": {
                              "name": "onPrimaryAction",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": false,
                              "type": "((name: string) => void | Promise<boolean>) | undefined",
                              "declarations": [],
                              "schema": {
                                "kind": "enum",
                                "type": "((name: string) => void | Promise<boolean>) | undefined",
                                "schema": [
                                  "undefined",
                                  {
                                    "kind": "event",
                                    "type": "(name: string): void | Promise<boolean>",
                                    "schema": []
                                  }
                                ]
                              }
                            },
                            "icon": {
                              "name": "icon",
                              "global": false,
                              "description": "",
                              "tags": [
                                {
                                  "name": "deprecated",
                                  "text": "Source of the icon"
                                }
                              ],
                              "required": false,
                              "type": "IconSource | undefined",
                              "declarations": [],
                              "schema": {
                                "kind": "enum",
                                "type": "IconSource | undefined",
                                "schema": [
                                  "undefined",
                                  "string",
                                  "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, any>",
                                  "FunctionalComponent<any, {}, any, {}>",
                                  "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>",
                                  {
                                    "kind": "array",
                                    "type": "(string | Component)[]",
                                    "schema": [
                                      {
                                        "kind": "enum",
                                        "type": "string | Component",
                                        "schema": [
                                          "string",
                                          "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, any>",
                                          "FunctionalComponent<any, {}, any, {}>",
                                          "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "id": {
                              "name": "id",
                              "global": false,
                              "description": "A unique identifier for the action",
                              "tags": [],
                              "required": false,
                              "type": "string | undefined",
                              "declarations": [],
                              "schema": "string | undefined"
                            },
                            "accessibilityLabel": {
                              "name": "accessibilityLabel",
                              "global": false,
                              "description": "Visually hidden text for screen readers",
                              "tags": [],
                              "required": false,
                              "type": "string | undefined",
                              "declarations": [],
                              "schema": "string | undefined"
                            },
                            "role": {
                              "name": "role",
                              "global": false,
                              "description": "Defines a role for the action",
                              "tags": [],
                              "required": false,
                              "type": "string | undefined",
                              "declarations": [],
                              "schema": "string | undefined"
                            },
                            "variant": {
                              "name": "variant",
                              "global": false,
                              "description": "The item variations",
                              "tags": [],
                              "required": false,
                              "type": "\"default\" | \"menu\" | \"indented\" | undefined",
                              "declarations": [],
                              "schema": {
                                "kind": "enum",
                                "type": "\"default\" | \"menu\" | \"indented\" | undefined",
                                "schema": [
                                  "undefined",
                                  "\"default\"",
                                  "\"menu\"",
                                  "\"indented\""
                                ]
                              }
                            },
                            "url": {
                              "name": "url",
                              "global": false,
                              "description": "A destination to link to, rendered in the action",
                              "tags": [],
                              "required": false,
                              "type": "string | undefined",
                              "declarations": [],
                              "schema": "string | undefined"
                            },
                            "external": {
                              "name": "external",
                              "global": false,
                              "description": "Forces url to open in a new tab",
                              "tags": [],
                              "required": false,
                              "type": "boolean | undefined",
                              "declarations": [],
                              "schema": "boolean | undefined"
                            },
                            "target": {
                              "name": "target",
                              "global": false,
                              "description": "Where to display the url",
                              "tags": [],
                              "required": false,
                              "type": "Target | undefined",
                              "declarations": [],
                              "schema": {
                                "kind": "enum",
                                "type": "Target | undefined",
                                "schema": [
                                  "undefined",
                                  "\"_blank\"",
                                  "\"_self\"",
                                  "\"_parent\"",
                                  "\"_top\""
                                ]
                              }
                            },
                            "disabled": {
                              "name": "disabled",
                              "global": false,
                              "description": "Whether or not the action is disabled",
                              "tags": [],
                              "required": false,
                              "type": "boolean | undefined",
                              "declarations": [],
                              "schema": "boolean | undefined"
                            },
                            "helpText": {
                              "name": "helpText",
                              "global": false,
                              "description": "Additional hint text to display with item",
                              "tags": [],
                              "required": false,
                              "type": "string | undefined",
                              "declarations": [],
                              "schema": "string | undefined"
                            },
                            "truncate": {
                              "name": "truncate",
                              "global": false,
                              "description": "Truncate the action content either at the beginning or at the end",
                              "tags": [],
                              "required": false,
                              "type": "boolean | undefined",
                              "declarations": [],
                              "schema": "boolean | undefined"
                            },
                            "active": {
                              "name": "active",
                              "global": false,
                              "description": "Whether the action is active or not",
                              "tags": [],
                              "required": false,
                              "type": "boolean | undefined",
                              "declarations": [],
                              "schema": "boolean | undefined"
                            },
                            "image": {
                              "name": "image",
                              "global": false,
                              "description": "",
                              "tags": [
                                {
                                  "name": "deprecated",
                                  "text": "Image source"
                                }
                              ],
                              "required": false,
                              "type": "string | undefined",
                              "declarations": [],
                              "schema": "string | undefined"
                            },
                            "badge": {
                              "name": "badge",
                              "global": false,
                              "description": "",
                              "tags": [
                                {
                                  "name": "deprecated",
                                  "text": "Badge component"
                                }
                              ],
                              "required": false,
                              "type": "{ tone: \"new\"; content: string; } | undefined",
                              "declarations": [],
                              "schema": {
                                "kind": "enum",
                                "type": "{ tone: \"new\"; content: string; } | undefined",
                                "schema": [
                                  "undefined",
                                  {
                                    "kind": "object",
                                    "type": "{ tone: \"new\"; content: string; }",
                                    "schema": {
                                      "tone": {
                                        "name": "tone",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "\"new\"",
                                        "declarations": [],
                                        "schema": "\"new\""
                                      },
                                      "content": {
                                        "name": "content",
                                        "global": false,
                                        "description": "",
                                        "tags": [],
                                        "required": true,
                                        "type": "string",
                                        "declarations": [],
                                        "schema": "string"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "prefix": {
                              "name": "prefix",
                              "global": false,
                              "description": "Prefix source",
                              "tags": [],
                              "required": false,
                              "type": "VueNode",
                              "declarations": [],
                              "schema": "VueNode"
                            },
                            "suffix": {
                              "name": "suffix",
                              "global": false,
                              "description": "Suffix source",
                              "tags": [],
                              "required": false,
                              "type": "VueNode",
                              "declarations": [],
                              "schema": "VueNode"
                            },
                            "ellipsis": {
                              "name": "ellipsis",
                              "global": false,
                              "description": "",
                              "tags": [
                                {
                                  "name": "deprecated",
                                  "text": "Add an ellipsis suffix to action content. ellipsis appends `...` without truncating. Use truncate instead."
                                }
                              ],
                              "required": false,
                              "type": "boolean | undefined",
                              "declarations": [],
                              "schema": "boolean | undefined"
                            },
                            "content": {
                              "name": "content",
                              "global": false,
                              "description": "Content the action displays",
                              "tags": [],
                              "required": false,
                              "type": "string | undefined",
                              "declarations": [],
                              "schema": "string | undefined"
                            },
                            "onMouseEnter": {
                              "name": "onMouseEnter",
                              "global": false,
                              "description": "Callback when mouse enter",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": [
                                  "undefined",
                                  {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                ]
                              }
                            },
                            "onTouchStart": {
                              "name": "onTouchStart",
                              "global": false,
                              "description": "Callback when element is touched",
                              "tags": [],
                              "required": false,
                              "type": "(() => void) | undefined",
                              "declarations": [],
                              "schema": {
                                "kind": "enum",
                                "type": "(() => void) | undefined",
                                "schema": [
                                  "undefined",
                                  {
                                    "kind": "event",
                                    "type": "(): void"
                                  }
                                ]
                              }
                            },
                            "destructive": {
                              "name": "destructive",
                              "global": false,
                              "description": "Destructive action",
                              "tags": [],
                              "required": false,
                              "type": "boolean | undefined",
                              "declarations": [],
                              "schema": "boolean | undefined"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "viewNames": {
                "name": "viewNames",
                "global": false,
                "description": "Optional array that has a list of names of currently existing views. Used to check if a view name is unique.",
                "tags": [],
                "required": false,
                "type": "string[] | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "string[] | undefined",
                  "schema": [
                    "undefined",
                    {
                      "kind": "array",
                      "type": "string[]",
                      "schema": [
                        "string"
                      ]
                    }
                  ]
                }
              },
              "isModalLoading": {
                "name": "isModalLoading",
                "global": false,
                "description": "If true, the primary button in the currently open Modal will show a loading state",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              },
              "focused": {
                "name": "focused",
                "global": false,
                "description": "If the Tab is currently focused",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              },
              "siblingTabHasFocus": {
                "name": "siblingTabHasFocus",
                "global": false,
                "description": "If a sibling Tab currently has focus",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              },
              "selected": {
                "name": "selected",
                "global": false,
                "description": "If the Tab is selected",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              },
              "measuring": {
                "name": "measuring",
                "global": false,
                "description": "If the Tab is currently being measured",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              },
              "tabIndexOverride": {
                "name": "tabIndexOverride",
                "global": false,
                "description": "Overrides the tabIndex calculated by the Tabs component",
                "tags": [],
                "required": false,
                "type": "0 | -1 | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "0 | -1 | undefined",
                  "schema": [
                    "undefined",
                    "0",
                    "-1"
                  ]
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "sortOptions",
      "type": "SortButtonChoice[] | undefined",
      "required": false,
      "description": "The available sorting choices. If not present, the sort button will not show",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "SortButtonChoice[] | undefined",
        "schema": [
          "undefined",
          {
            "kind": "array",
            "type": "SortButtonChoice[]",
            "schema": [
              {
                "kind": "object",
                "type": "SortButtonChoice",
                "schema": {
                  "label": {
                    "name": "label",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "string",
                    "declarations": [],
                    "schema": "string"
                  },
                  "disabled": {
                    "name": "disabled",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "boolean | undefined",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "boolean | undefined",
                      "schema": [
                        "undefined",
                        "false",
                        "true"
                      ]
                    }
                  },
                  "value": {
                    "name": "value",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "`${string} desc` | `${string} asc`",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "`${string} desc` | `${string} asc`",
                      "schema": [
                        "`${string} desc`",
                        "`${string} asc`"
                      ]
                    }
                  },
                  "directionLabel": {
                    "name": "directionLabel",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "string",
                    "declarations": [],
                    "schema": "string"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "sortSelected",
      "type": "string[] | undefined",
      "required": false,
      "description": "The currently selected sort choice. Required if using sorting",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string[] | undefined",
        "schema": [
          "undefined",
          {
            "kind": "array",
            "type": "string[]",
            "schema": [
              "string"
            ]
          }
        ]
      }
    },
    {
      "name": "cancelAction",
      "type": "IndexFiltersCancelAction | undefined",
      "required": false,
      "description": "The cancel action to display",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "IndexFiltersCancelAction | undefined",
        "schema": [
          "undefined",
          {
            "kind": "object",
            "type": "IndexFiltersCancelAction",
            "schema": {
              "onAction": {
                "name": "onAction",
                "global": false,
                "description": "",
                "tags": [],
                "required": true,
                "type": "() => void",
                "declarations": [],
                "schema": {
                  "kind": "event",
                  "type": "(): void"
                }
              },
              "disabled": {
                "name": "disabled",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "boolean | undefined",
                  "schema": [
                    "undefined",
                    "false",
                    "true"
                  ]
                }
              },
              "loading": {
                "name": "loading",
                "global": false,
                "description": "",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": "boolean | undefined"
              }
            }
          }
        ]
      }
    },
    {
      "name": "mode",
      "type": "IndexFiltersMode",
      "required": true,
      "description": "The current mode of the IndexFilters component. Used to determine which view to show",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "IndexFiltersMode",
        "schema": [
          "IndexFiltersMode.Default",
          "IndexFiltersMode.Filtering",
          "IndexFiltersMode.EditingColumns"
        ]
      }
    },
    {
      "name": "disableStickyMode",
      "type": "boolean | undefined",
      "required": false,
      "description": "If true, the sticky interaction on smaller devices will be disabled",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "filteringAccessibilityLabel",
      "type": "string | undefined",
      "required": false,
      "description": "Optional override to the default aria-label for the button that toggles the filtering mode",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "filteringAccessibilityTooltip",
      "type": "string | undefined",
      "required": false,
      "description": "Optional override to the default Tooltip message for the button that toggles the filtering mode",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "disableKeyboardShortcuts",
      "type": "boolean | undefined",
      "required": false,
      "description": "Optional override to the default keyboard shortcuts available",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "showEditColumnsButton",
      "type": "boolean | undefined",
      "required": false,
      "description": "Whether to display the edit columns button with the other default mode filter actions",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "autoFocusSearchField",
      "type": "boolean | undefined",
      "required": false,
      "description": "Whether or not to auto-focus the search field when it renders",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    }
  ],
  "events": [
    {
      "name": "sort",
      "description": "Optional callback invoked when a merchant changes the sort order. Required if using sorting",
      "params": {
        "value": "string[]"
      }
    },
    {
      "name": "sort-key-change",
      "description": "Optional callback when using saved views and changing the sort key",
      "params": {
        "value": "string"
      }
    },
    {
      "name": "sort-direction-change",
      "description": "Optional callback when using saved views and changing the sort direction",
      "params": {
        "value": "string"
      }
    },
    {
      "name": "filter-click",
      "description": "Callback when the add filter button is clicked, to be passed to AlphaFilters.",
      "params": {}
    },
    {
      "name": "set-mode",
      "description": "Callback to set the mode of the IndexFilters component",
      "params": {
        "mode": "IndexFiltersMode"
      }
    },
    {
      "name": "create-new-view",
      "description": "Callback invoked when a merchant creates a new view",
      "params": {
        "name": "string"
      }
    },
    {
      "name": "edit-start",
      "description": "Optional callback invoked when a merchant begins to edit a view",
      "params": {
        "mode": "ActionableIndexFiltersMode"
      }
    },
    {
      "name": "query-change",
      "description": "Callback when the query field is changed.",
      "params": {}
    },
    {
      "name": "query-clear",
      "description": "Callback when the clear button is triggered.",
      "params": {}
    },
    {
      "name": "clear-all",
      "description": "Callback when the reset all button is pressed.",
      "params": {}
    },
    {
      "name": "query-blur",
      "description": "Callback when the query field is blurred.",
      "params": {}
    },
    {
      "name": "query-focus",
      "description": "Callback when the query field is focused.",
      "params": {}
    },
    {
      "name": "add-filter-click",
      "description": "Callback when the add filter button is clicked.",
      "params": {}
    },
    {
      "name": "select",
      "description": "Tabs Events",
      "params": {
        "selectedTabIndex": "number"
      }
    }
  ],
  "slots": []
}