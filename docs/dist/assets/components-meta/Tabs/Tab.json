{
  "props": [
    {
      "name": "actions",
      "type": "TabActionDescriptor[] | undefined",
      "required": false,
      "description": "A list of actions which map to actions that a merchant can take with this",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "TabActionDescriptor[] | undefined",
        "schema": [
          "undefined",
          {
            "kind": "array",
            "type": "TabActionDescriptor[]",
            "schema": [
              {
                "kind": "object",
                "type": "TabActionDescriptor",
                "schema": {
                  "type": {
                    "name": "type",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "TabAction",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "TabAction",
                      "schema": [
                        "\"delete\"",
                        "\"rename\"",
                        "\"edit\"",
                        "\"edit-columns\"",
                        "\"duplicate\""
                      ]
                    }
                  },
                  "onAction": {
                    "name": "onAction",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "((name: string) => void) | undefined",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "((name: string) => void) | undefined",
                      "schema": [
                        "undefined",
                        {
                          "kind": "event",
                          "type": "(name: string): void",
                          "schema": []
                        }
                      ]
                    }
                  },
                  "onPrimaryAction": {
                    "name": "onPrimaryAction",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": false,
                    "type": "((name: string) => void | Promise<boolean>) | undefined",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "((name: string) => void | Promise<boolean>) | undefined",
                      "schema": [
                        "undefined",
                        {
                          "kind": "event",
                          "type": "(name: string): void | Promise<boolean>",
                          "schema": []
                        }
                      ]
                    }
                  },
                  "icon": {
                    "name": "icon",
                    "global": false,
                    "description": "",
                    "tags": [
                      {
                        "name": "deprecated",
                        "text": "Source of the icon"
                      }
                    ],
                    "required": false,
                    "type": "IconSource | undefined",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "IconSource | undefined",
                      "schema": [
                        "undefined",
                        "string",
                        "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, any>",
                        "FunctionalComponent<any, {}, any, {}>",
                        "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>",
                        {
                          "kind": "array",
                          "type": "(string | Component)[]",
                          "schema": [
                            {
                              "kind": "enum",
                              "type": "string | Component",
                              "schema": [
                                "string",
                                "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, any>",
                                "FunctionalComponent<any, {}, any, {}>",
                                "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "id": {
                    "name": "id",
                    "global": false,
                    "description": "A unique identifier for the action",
                    "tags": [],
                    "required": false,
                    "type": "string | undefined",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "string | undefined",
                      "schema": [
                        "undefined",
                        "string"
                      ]
                    }
                  },
                  "accessibilityLabel": {
                    "name": "accessibilityLabel",
                    "global": false,
                    "description": "Visually hidden text for screen readers",
                    "tags": [],
                    "required": false,
                    "type": "string | undefined",
                    "declarations": [],
                    "schema": "string | undefined"
                  },
                  "role": {
                    "name": "role",
                    "global": false,
                    "description": "Defines a role for the action",
                    "tags": [],
                    "required": false,
                    "type": "string | undefined",
                    "declarations": [],
                    "schema": "string | undefined"
                  },
                  "disabled": {
                    "name": "disabled",
                    "global": false,
                    "description": "Whether or not the action is disabled",
                    "tags": [],
                    "required": false,
                    "type": "boolean | undefined",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "boolean | undefined",
                      "schema": [
                        "undefined",
                        "false",
                        "true"
                      ]
                    }
                  },
                  "variant": {
                    "name": "variant",
                    "global": false,
                    "description": "The item variations",
                    "tags": [],
                    "required": false,
                    "type": "\"default\" | \"menu\" | \"indented\" | undefined",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "\"default\" | \"menu\" | \"indented\" | undefined",
                      "schema": [
                        "undefined",
                        "\"default\"",
                        "\"menu\"",
                        "\"indented\""
                      ]
                    }
                  },
                  "url": {
                    "name": "url",
                    "global": false,
                    "description": "A destination to link to, rendered in the action",
                    "tags": [],
                    "required": false,
                    "type": "string | undefined",
                    "declarations": [],
                    "schema": "string | undefined"
                  },
                  "external": {
                    "name": "external",
                    "global": false,
                    "description": "Forces url to open in a new tab",
                    "tags": [],
                    "required": false,
                    "type": "boolean | undefined",
                    "declarations": [],
                    "schema": "boolean | undefined"
                  },
                  "target": {
                    "name": "target",
                    "global": false,
                    "description": "Where to display the url",
                    "tags": [],
                    "required": false,
                    "type": "Target | undefined",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "Target | undefined",
                      "schema": [
                        "undefined",
                        "\"_blank\"",
                        "\"_self\"",
                        "\"_parent\"",
                        "\"_top\""
                      ]
                    }
                  },
                  "helpText": {
                    "name": "helpText",
                    "global": false,
                    "description": "Additional hint text to display with item",
                    "tags": [],
                    "required": false,
                    "type": "string | undefined",
                    "declarations": [],
                    "schema": "string | undefined"
                  },
                  "truncate": {
                    "name": "truncate",
                    "global": false,
                    "description": "Truncate the action content either at the beginning or at the end",
                    "tags": [],
                    "required": false,
                    "type": "boolean | undefined",
                    "declarations": [],
                    "schema": "boolean | undefined"
                  },
                  "active": {
                    "name": "active",
                    "global": false,
                    "description": "Whether the action is active or not",
                    "tags": [],
                    "required": false,
                    "type": "boolean | undefined",
                    "declarations": [],
                    "schema": "boolean | undefined"
                  },
                  "image": {
                    "name": "image",
                    "global": false,
                    "description": "",
                    "tags": [
                      {
                        "name": "deprecated",
                        "text": "Image source"
                      }
                    ],
                    "required": false,
                    "type": "string | undefined",
                    "declarations": [],
                    "schema": "string | undefined"
                  },
                  "badge": {
                    "name": "badge",
                    "global": false,
                    "description": "",
                    "tags": [
                      {
                        "name": "deprecated",
                        "text": "Badge component"
                      }
                    ],
                    "required": false,
                    "type": "{ tone: \"new\"; content: string; } | undefined",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "{ tone: \"new\"; content: string; } | undefined",
                      "schema": [
                        "undefined",
                        {
                          "kind": "object",
                          "type": "{ tone: \"new\"; content: string; }",
                          "schema": {
                            "tone": {
                              "name": "tone",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "\"new\"",
                              "declarations": [],
                              "schema": "\"new\""
                            },
                            "content": {
                              "name": "content",
                              "global": false,
                              "description": "",
                              "tags": [],
                              "required": true,
                              "type": "string",
                              "declarations": [],
                              "schema": "string"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "prefix": {
                    "name": "prefix",
                    "global": false,
                    "description": "Prefix source",
                    "tags": [],
                    "required": false,
                    "type": "VueNode",
                    "declarations": [],
                    "schema": "VueNode"
                  },
                  "suffix": {
                    "name": "suffix",
                    "global": false,
                    "description": "Suffix source",
                    "tags": [],
                    "required": false,
                    "type": "VueNode",
                    "declarations": [],
                    "schema": "VueNode"
                  },
                  "ellipsis": {
                    "name": "ellipsis",
                    "global": false,
                    "description": "",
                    "tags": [
                      {
                        "name": "deprecated",
                        "text": "Add an ellipsis suffix to action content. ellipsis appends `...` without truncating. Use truncate instead."
                      }
                    ],
                    "required": false,
                    "type": "boolean | undefined",
                    "declarations": [],
                    "schema": "boolean | undefined"
                  },
                  "content": {
                    "name": "content",
                    "global": false,
                    "description": "Content the action displays",
                    "tags": [],
                    "required": false,
                    "type": "string | undefined",
                    "declarations": [],
                    "schema": "string | undefined"
                  },
                  "onMouseEnter": {
                    "name": "onMouseEnter",
                    "global": false,
                    "description": "Callback when mouse enter",
                    "tags": [],
                    "required": false,
                    "type": "(() => void) | undefined",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "(() => void) | undefined",
                      "schema": [
                        "undefined",
                        {
                          "kind": "event",
                          "type": "(): void"
                        }
                      ]
                    }
                  },
                  "onTouchStart": {
                    "name": "onTouchStart",
                    "global": false,
                    "description": "Callback when element is touched",
                    "tags": [],
                    "required": false,
                    "type": "(() => void) | undefined",
                    "declarations": [],
                    "schema": {
                      "kind": "enum",
                      "type": "(() => void) | undefined",
                      "schema": [
                        "undefined",
                        {
                          "kind": "event",
                          "type": "(): void"
                        }
                      ]
                    }
                  },
                  "destructive": {
                    "name": "destructive",
                    "global": false,
                    "description": "Destructive action",
                    "tags": [],
                    "required": false,
                    "type": "boolean | undefined",
                    "declarations": [],
                    "schema": "boolean | undefined"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "id",
      "type": "string",
      "required": true,
      "description": "The unique identifier for the Tab",
      "tags": [],
      "declarations": [],
      "schema": "string"
    },
    {
      "name": "selected",
      "type": "boolean | undefined",
      "required": false,
      "description": "If the Tab is selected",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "accessibilityLabel",
      "type": "string | undefined",
      "required": false,
      "description": "The accessible label for the Tab, if the name alone does not give enough context",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "disabled",
      "type": "boolean | undefined",
      "required": false,
      "description": "Whether the Tab is disabled",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "url",
      "type": "string | undefined",
      "required": false,
      "description": "Optional URL if the Tab points to a location",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "focused",
      "type": "boolean | undefined",
      "required": false,
      "description": "If the Tab is currently focused",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "badge",
      "type": "string | undefined",
      "required": false,
      "description": "A badge to render next to the view name",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "content",
      "type": "string",
      "required": true,
      "description": "The name of the Tab",
      "tags": [],
      "declarations": [],
      "schema": "string"
    },
    {
      "name": "measuring",
      "type": "boolean | undefined",
      "required": false,
      "description": "If the Tab is currently being measured",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "viewNames",
      "type": "string[] | undefined",
      "required": false,
      "description": "Optional array that has a list of names of currently existing views. Used to check if a view name is unique.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string[] | undefined",
        "schema": [
          "undefined",
          {
            "kind": "array",
            "type": "string[]",
            "schema": [
              "string"
            ]
          }
        ]
      }
    },
    {
      "name": "panelID",
      "type": "string | undefined",
      "required": false,
      "description": "A unique identifier for the panel",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "isLocked",
      "type": "boolean | undefined",
      "required": false,
      "description": "If true, will remove the ability to edit/rename/delete the view.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "isModalLoading",
      "type": "boolean | undefined",
      "required": false,
      "description": "If true, the primary button in the currently open Modal will show a loading state",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "siblingTabHasFocus",
      "type": "boolean | undefined",
      "required": false,
      "description": "If a sibling Tab currently has focus",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "tabIndexOverride",
      "type": "0 | -1 | undefined",
      "required": false,
      "description": "Overrides the tabIndex calculated by the Tabs component",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "0 | -1 | undefined",
        "schema": [
          "undefined",
          "0",
          "-1"
        ]
      }
    }
  ],
  "events": [
    {
      "name": "",
      "description": "",
      "params": {}
    }
  ],
  "slots": [
    {
      "name": "default",
      "type": "VueNode",
      "description": "Elements to display inside the tag",
      "declarations": [],
      "schema": "VueNode"
    },
    {
      "name": "icon",
      "type": "VueNode",
      "description": "An icon to render in place of a view name. Please pass the full Icon component, rather\nthan a reference to the particular icon source.",
      "declarations": [],
      "schema": "VueNode"
    }
  ]
}