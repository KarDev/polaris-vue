{
  "props": [
    {
      "name": "type",
      "type": "Type | undefined",
      "required": false,
      "description": "Determine type of input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "Type | undefined",
        "schema": [
          "undefined",
          "\"number\"",
          "\"search\"",
          "\"text\"",
          "\"url\"",
          "\"month\"",
          "\"time\"",
          "\"email\"",
          "\"tel\"",
          "\"integer\"",
          "\"password\"",
          "\"date\"",
          "\"datetime-local\"",
          "\"week\"",
          "\"currency\""
        ]
      }
    },
    {
      "name": "ariaAutocomplete",
      "type": "string | undefined",
      "required": false,
      "description": "Indicates what kind of user input completion suggestions are provided",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "name",
      "type": "string | undefined",
      "required": false,
      "description": "Name of the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "size",
      "type": "\"medium\" | \"slim\" | undefined",
      "required": false,
      "description": "Changes the size of the input, giving it more or less padding",
      "tags": [
        {
          "name": "default",
          "text": "'medium'"
        }
      ],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "\"medium\" | \"slim\" | undefined",
        "schema": [
          "undefined",
          "\"medium\"",
          "\"slim\""
        ]
      }
    },
    {
      "name": "id",
      "type": "string | undefined",
      "required": false,
      "description": "ID for the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "loading",
      "type": "boolean | undefined",
      "required": false,
      "description": "Indicates the loading state",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "error",
      "type": "boolean | Error | undefined",
      "required": false,
      "description": "Error to display beneath the label",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | Error | undefined",
        "schema": [
          "undefined",
          "string",
          "false",
          "true",
          "Element",
          {
            "kind": "array",
            "type": "(string | Element)[]",
            "schema": [
              {
                "kind": "enum",
                "type": "string | Element",
                "schema": [
                  "string",
                  "Element"
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "name": "tone",
      "type": "\"magic\" | undefined",
      "required": false,
      "description": "Indicates the tone of the text field",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "\"magic\" | undefined",
        "schema": [
          "undefined",
          "\"magic\""
        ]
      }
    },
    {
      "name": "align",
      "type": "Alignment | undefined",
      "required": false,
      "description": "Determines the alignment of the text in the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "Alignment | undefined",
        "schema": [
          "undefined",
          "\"center\"",
          "\"left\"",
          "\"right\""
        ]
      }
    },
    {
      "name": "role",
      "type": "string | undefined",
      "required": false,
      "description": "Defines a specific role attribute for the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "variant",
      "type": "\"inherit\" | \"borderless\" | undefined",
      "required": false,
      "description": "Visual styling options for the TextField",
      "tags": [
        {
          "name": "default",
          "text": "'inherit'"
        }
      ],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "\"inherit\" | \"borderless\" | undefined",
        "schema": [
          "undefined",
          "\"inherit\"",
          "\"borderless\""
        ]
      }
    },
    {
      "name": "disabled",
      "type": "boolean | undefined",
      "required": false,
      "description": "Disable the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "ariaControls",
      "type": "string | undefined",
      "required": false,
      "description": "Indicates the id of a component controlled by the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "ariaExpanded",
      "type": "boolean | undefined",
      "required": false,
      "description": "Indicates whether or not a Popover is displayed",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "label",
      "type": "string | undefined",
      "required": false,
      "description": "Label for the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "labelHidden",
      "type": "boolean | undefined",
      "required": false,
      "description": "Visually hide the label",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "value",
      "type": "string | undefined",
      "required": false,
      "description": "Initial value for the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "helpText",
      "type": "string | undefined",
      "required": false,
      "description": "Additional hint text to display",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "modelValue",
      "type": "string | undefined",
      "required": false,
      "description": "",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "labelAction",
      "type": "Action | undefined",
      "required": false,
      "description": "Adds an action to the label",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "Action | undefined",
        "schema": [
          "undefined",
          {
            "kind": "object",
            "type": "Action",
            "schema": {
              "id": {
                "name": "id",
                "global": false,
                "description": "A unique identifier for the action",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "string | undefined",
                  "schema": [
                    "undefined",
                    "string"
                  ]
                }
              },
              "content": {
                "name": "content",
                "global": false,
                "description": "Content the action displays",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [],
                "schema": "string | undefined"
              },
              "accessibilityLabel": {
                "name": "accessibilityLabel",
                "global": false,
                "description": "Visually hidden text for screen readers",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [],
                "schema": "string | undefined"
              },
              "url": {
                "name": "url",
                "global": false,
                "description": "A destination to link to, rendered in the action",
                "tags": [],
                "required": false,
                "type": "string | undefined",
                "declarations": [],
                "schema": "string | undefined"
              },
              "external": {
                "name": "external",
                "global": false,
                "description": "Forces url to open in a new tab",
                "tags": [],
                "required": false,
                "type": "boolean | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "boolean | undefined",
                  "schema": [
                    "undefined",
                    "false",
                    "true"
                  ]
                }
              },
              "target": {
                "name": "target",
                "global": false,
                "description": "Where to display the url",
                "tags": [],
                "required": false,
                "type": "Target | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "Target | undefined",
                  "schema": [
                    "undefined",
                    "\"_blank\"",
                    "\"_self\"",
                    "\"_parent\"",
                    "\"_top\""
                  ]
                }
              },
              "onAction": {
                "name": "onAction",
                "global": false,
                "description": "Callback when an action takes place",
                "tags": [],
                "required": false,
                "type": "(() => void) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "(() => void) | undefined",
                  "schema": [
                    "undefined",
                    {
                      "kind": "event",
                      "type": "(): void"
                    }
                  ]
                }
              },
              "onMouseEnter": {
                "name": "onMouseEnter",
                "global": false,
                "description": "Callback when mouse enter",
                "tags": [],
                "required": false,
                "type": "(() => void) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "(() => void) | undefined",
                  "schema": [
                    "undefined",
                    {
                      "kind": "event",
                      "type": "(): void"
                    }
                  ]
                }
              },
              "onTouchStart": {
                "name": "onTouchStart",
                "global": false,
                "description": "Callback when element is touched",
                "tags": [],
                "required": false,
                "type": "(() => void) | undefined",
                "declarations": [],
                "schema": {
                  "kind": "enum",
                  "type": "(() => void) | undefined",
                  "schema": [
                    "undefined",
                    {
                      "kind": "event",
                      "type": "(): void"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "focused",
      "type": "boolean | undefined",
      "required": false,
      "description": "Force the focus state on the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "pattern",
      "type": "string | undefined",
      "required": false,
      "description": "A regular expression to check the value against",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "max",
      "type": "string | number | undefined",
      "required": false,
      "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | number | undefined",
        "schema": [
          "undefined",
          "string",
          "number"
        ]
      }
    },
    {
      "name": "min",
      "type": "string | number | undefined",
      "required": false,
      "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | number | undefined",
        "schema": [
          "undefined",
          "string",
          "number"
        ]
      }
    },
    {
      "name": "readOnly",
      "type": "boolean | undefined",
      "required": false,
      "description": "Disable editing of the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "autoComplete",
      "type": "string",
      "required": true,
      "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
      "tags": [],
      "declarations": [],
      "schema": "string"
    },
    {
      "name": "prefix",
      "type": "string | undefined",
      "required": false,
      "description": "Text to display before value",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "suffix",
      "type": "string | undefined",
      "required": false,
      "description": "Text to display after value",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "requiredIndicator",
      "type": "boolean | undefined",
      "required": false,
      "description": "Visual required indicator, adds an asterisk to label",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "step",
      "type": "number | undefined",
      "required": false,
      "description": "Limit increment value for numeric and date-time inputs",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "number | undefined",
        "schema": [
          "undefined",
          "number"
        ]
      }
    },
    {
      "name": "placeholder",
      "type": "string | undefined",
      "required": false,
      "description": "Hint text to display",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "verticalContent",
      "type": "string | undefined",
      "required": false,
      "description": "Content to vertically display above the input value",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "clearButton",
      "type": "boolean | undefined",
      "required": false,
      "description": "Show a clear text button in the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "selectTextOnFocus",
      "type": "boolean | undefined",
      "required": false,
      "description": "Indicates whether or not the entire value should be selected on focus.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "suggestion",
      "type": "string | undefined",
      "required": false,
      "description": "An inline autocomplete suggestion containing the input value. The characters that complete the input value are selected for ease of deletion on input change or keypress of Backspace/Delete. The selected substring is visually highlighted with subdued styling.",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "autoFocus",
      "type": "boolean | undefined",
      "required": false,
      "description": "Automatically focus the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "multiline",
      "type": "number | boolean | undefined",
      "required": false,
      "description": "Allow for multiple lines of input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "number | boolean | undefined",
        "schema": [
          "undefined",
          "number",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "largeStep",
      "type": "number | undefined",
      "required": false,
      "description": "Increment value for numeric and date-time inputs when using Page Up or Page Down",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "number | undefined",
        "schema": [
          "undefined",
          "number"
        ]
      }
    },
    {
      "name": "maxLength",
      "type": "number | undefined",
      "required": false,
      "description": "Maximum character length for an input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "number | undefined",
        "schema": [
          "undefined",
          "number"
        ]
      }
    },
    {
      "name": "maxHeight",
      "type": "string | number | undefined",
      "required": false,
      "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | number | undefined",
        "schema": [
          "undefined",
          "string",
          "number"
        ]
      }
    },
    {
      "name": "minLength",
      "type": "number | undefined",
      "required": false,
      "description": "Minimum character length for an input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "number | undefined",
        "schema": [
          "undefined",
          "number"
        ]
      }
    },
    {
      "name": "inputMode",
      "type": "InputMode | undefined",
      "required": false,
      "description": "Choose the keyboard that should be used on mobile devices",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "InputMode | undefined",
        "schema": [
          "undefined",
          "\"search\"",
          "\"text\"",
          "\"url\"",
          "\"none\"",
          "\"numeric\"",
          "\"email\"",
          "\"tel\"",
          "\"decimal\""
        ]
      }
    },
    {
      "name": "spellCheck",
      "type": "boolean | undefined",
      "required": false,
      "description": "Indicate whether value should have spelling checked",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "ariaOwns",
      "type": "string | undefined",
      "required": false,
      "description": "Indicates the id of a component owned by the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "ariaActiveDescendant",
      "type": "string | undefined",
      "required": false,
      "description": "Indicates the id of a related component’s visually focused element to the input",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    },
    {
      "name": "showCharacterCount",
      "type": "boolean | undefined",
      "required": false,
      "description": "Indicates whether or not the character count should be displayed",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "monospaced",
      "type": "boolean | undefined",
      "required": false,
      "description": "Indicates whether or not a monospaced font should be used",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    },
    {
      "name": "autoSize",
      "type": "boolean | undefined",
      "required": false,
      "description": "Whether the TextField will grow as the text within the input changes",
      "tags": [],
      "declarations": [],
      "schema": {
        "kind": "enum",
        "type": "boolean | undefined",
        "schema": [
          "undefined",
          "false",
          "true"
        ]
      }
    }
  ],
  "events": [
    {
      "name": "",
      "description": "",
      "params": {}
    }
  ],
  "slots": [
    {
      "name": "helpText",
      "type": "VueNode",
      "description": "Additional hint text to display",
      "declarations": [],
      "schema": "VueNode"
    },
    {
      "name": "label",
      "type": "VueNode",
      "description": "Label for the input",
      "declarations": [],
      "schema": "VueNode"
    },
    {
      "name": "connectedRight",
      "type": "VueNode",
      "description": "An element connected to the right of the input",
      "declarations": [],
      "schema": "VueNode"
    },
    {
      "name": "connectedLeft",
      "type": "VueNode",
      "description": "An element connected to the left of the input",
      "declarations": [],
      "schema": "VueNode"
    },
    {
      "name": "verticalContent",
      "type": "VueNode",
      "description": "Content to vertically display above the input value",
      "declarations": [],
      "schema": "VueNode"
    },
    {
      "name": "prefix",
      "type": "VueNode",
      "description": "Text to display before value",
      "declarations": [],
      "schema": "VueNode"
    },
    {
      "name": "suffix",
      "type": "VueNode",
      "description": "Text to display after value",
      "declarations": [],
      "schema": "VueNode"
    }
  ]
}