{
  "filePath": "src/components/Select/types.ts",
  "name": "StrictOption",
  "description": "",
  "value": "export interface StrictOption {\n  /** Machine value of the option; this is the value passed to `onChange` */\n  value: string;\n  /** Human-readable text for the option */\n  label: string;\n  /** Option will be visible, but not selectable */\n  disabled?: boolean;\n  /** Element to display to the left of the option label. Does not show in the dropdown. */\n  prefix?: VueNode;\n  /** Unique key applied to the option element. Defaults to option value prop when undefined. */\n  key?: string;\n}",
  "members": [
    {
      "filePath": "src/components/Select/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "value",
      "value": "string",
      "description": "Machine value of the option; this is the value passed to `onChange`"
    },
    {
      "filePath": "src/components/Select/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "label",
      "value": "string",
      "description": "Human-readable text for the option"
    },
    {
      "filePath": "src/components/Select/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "disabled",
      "value": "boolean",
      "description": "Option will be visible, but not selectable",
      "isOptional": true
    },
    {
      "filePath": "src/components/Select/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "prefix",
      "value": "VueNode",
      "description": "Element to display to the left of the option label. Does not show in the dropdown.",
      "isOptional": true
    },
    {
      "filePath": "src/components/Select/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "key",
      "value": "string",
      "description": "Unique key applied to the option element. Defaults to option value prop when undefined.",
      "isOptional": true
    }
  ]
}