{
  "filePath": "src/components/TextField/types.ts",
  "name": "NonMutuallyExclusiveProps",
  "description": "",
  "value": "interface NonMutuallyExclusiveProps {\n  /** Text to display before value */\n  prefix?: string;\n  /** Text to display after value */\n  suffix?: string;\n  /** Content to vertically display above the input value */\n  verticalContent?: string;\n  /** Hint text to display */\n  placeholder?: string;\n  /** Initial value for the input */\n  value?: string;\n  /** Additional hint text to display */\n  helpText?: string;\n  /** Label for the input */\n  label?: string;\n  /** Adds an action to the label */\n  labelAction?: LabelledProps['action'];\n  /** Visually hide the label */\n  labelHidden?: boolean;\n  /** Disable the input */\n  disabled?: boolean;\n  /** Show a clear text button in the input */\n  clearButton?: boolean;\n  /** Indicates whether or not the entire value should be selected on focus. */\n  selectTextOnFocus?: boolean;\n  /** An inline autocomplete suggestion containing the input value. The characters that complete the input value are selected for ease of deletion on input change or keypress of Backspace/Delete. The selected substring is visually highlighted with subdued styling. */\n  suggestion?: string;\n  /** Disable editing of the input */\n  readOnly?: boolean;\n  /** Automatically focus the input */\n  autoFocus?: boolean;\n  /** Force the focus state on the input */\n  focused?: boolean;\n  /** Allow for multiple lines of input */\n  multiline?: boolean | number;\n  /** Error to display beneath the label */\n  error?: Error | boolean;\n  /** Determine type of input */\n  type?: Type;\n  /** Name of the input */\n  name?: string;\n  /** ID for the input */\n  id?: string;\n  /** Defines a specific role attribute for the input */\n  role?: string;\n  /** Limit increment value for numeric and date-time inputs */\n  step?: number;\n  /** Increment value for numeric and date-time inputs when using Page Up or Page Down */\n  largeStep?: number;\n  /** Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info */\n  autoComplete: string;\n  /** Mimics the behavior of the native HTML attribute, limiting the maximum value */\n  max?: number | string;\n  /** Maximum character length for an input */\n  maxLength?: number;\n  /** Maximum height of the input element. Only applies when `multiline` is `true` */\n  maxHeight?: number | string;\n  /** Mimics the behavior of the native HTML attribute, limiting the minimum value */\n  min?: number | string;\n  /** Minimum character length for an input */\n  minLength?: number;\n  /** A regular expression to check the value against */\n  pattern?: string;\n  /** Choose the keyboard that should be used on mobile devices */\n  inputMode?: InputMode;\n  /** Indicate whether value should have spelling checked */\n  spellCheck?: boolean;\n  /** Indicates the id of a component owned by the input */\n  ariaOwns?: string;\n  /** Indicates whether or not a Popover is displayed */\n  ariaExpanded?: boolean;\n  /** Indicates the id of a component controlled by the input */\n  ariaControls?: string;\n  /** Indicates the id of a related componentâ€™s visually focused element to the input */\n  ariaActiveDescendant?: string;\n  /** Indicates what kind of user input completion suggestions are provided */\n  ariaAutocomplete?: string;\n  /** Indicates whether or not the character count should be displayed */\n  showCharacterCount?: boolean;\n  /** Determines the alignment of the text in the input */\n  align?: Alignment;\n  /** Visual required indicator, adds an asterisk to label */\n  requiredIndicator?: boolean;\n  /** Indicates whether or not a monospaced font should be used */\n  monospaced?: boolean;\n  /** Visual styling options for the TextField\n   * @default 'inherit'\n   */\n  variant?: 'inherit' | 'borderless';\n  /**\n   * Changes the size of the input, giving it more or less padding\n   * @default 'medium'\n   */\n  size?: 'slim' | 'medium';\n  /** Indicates the tone of the text field */\n  tone?: 'magic';\n  /** Whether the TextField will grow as the text within the input changes */\n  autoSize?: boolean;\n  /** Indicates the loading state */\n  loading?: boolean;\n}",
  "members": [
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "prefix",
      "value": "string",
      "description": "Text to display before value",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "suffix",
      "value": "string",
      "description": "Text to display after value",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "verticalContent",
      "value": "string",
      "description": "Content to vertically display above the input value",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "placeholder",
      "value": "string",
      "description": "Hint text to display",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "value",
      "value": "string",
      "description": "Initial value for the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "helpText",
      "value": "string",
      "description": "Additional hint text to display",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "label",
      "value": "string",
      "description": "Label for the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "labelAction",
      "value": "Action",
      "description": "Adds an action to the label",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "labelHidden",
      "value": "boolean",
      "description": "Visually hide the label",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "disabled",
      "value": "boolean",
      "description": "Disable the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "clearButton",
      "value": "boolean",
      "description": "Show a clear text button in the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "selectTextOnFocus",
      "value": "boolean",
      "description": "Indicates whether or not the entire value should be selected on focus.",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "suggestion",
      "value": "string",
      "description": "An inline autocomplete suggestion containing the input value. The characters that complete the input value are selected for ease of deletion on input change or keypress of Backspace/Delete. The selected substring is visually highlighted with subdued styling.",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "readOnly",
      "value": "boolean",
      "description": "Disable editing of the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "autoFocus",
      "value": "boolean",
      "description": "Automatically focus the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "focused",
      "value": "boolean",
      "description": "Force the focus state on the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "multiline",
      "value": "number | boolean",
      "description": "Allow for multiple lines of input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "error",
      "value": "any",
      "description": "Error to display beneath the label",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "type",
      "value": "Type",
      "description": "Determine type of input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "name",
      "value": "string",
      "description": "Name of the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "id",
      "value": "string",
      "description": "ID for the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "role",
      "value": "string",
      "description": "Defines a specific role attribute for the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "step",
      "value": "number",
      "description": "Limit increment value for numeric and date-time inputs",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "largeStep",
      "value": "number",
      "description": "Increment value for numeric and date-time inputs when using Page Up or Page Down",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "autoComplete",
      "value": "string",
      "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info"
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "max",
      "value": "string | number",
      "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "maxLength",
      "value": "number",
      "description": "Maximum character length for an input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "maxHeight",
      "value": "string | number",
      "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "min",
      "value": "string | number",
      "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "minLength",
      "value": "number",
      "description": "Minimum character length for an input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "pattern",
      "value": "string",
      "description": "A regular expression to check the value against",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "inputMode",
      "value": "InputMode",
      "description": "Choose the keyboard that should be used on mobile devices",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "spellCheck",
      "value": "boolean",
      "description": "Indicate whether value should have spelling checked",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "ariaOwns",
      "value": "string",
      "description": "Indicates the id of a component owned by the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "ariaExpanded",
      "value": "boolean",
      "description": "Indicates whether or not a Popover is displayed",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "ariaControls",
      "value": "string",
      "description": "Indicates the id of a component controlled by the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "ariaActiveDescendant",
      "value": "string",
      "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "ariaAutocomplete",
      "value": "string",
      "description": "Indicates what kind of user input completion suggestions are provided",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "showCharacterCount",
      "value": "boolean",
      "description": "Indicates whether or not the character count should be displayed",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "align",
      "value": "Alignment",
      "description": "Determines the alignment of the text in the input",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "requiredIndicator",
      "value": "boolean",
      "description": "Visual required indicator, adds an asterisk to label",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "monospaced",
      "value": "boolean",
      "description": "Indicates whether or not a monospaced font should be used",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "variant",
      "value": "\"inherit\" | \"borderless\"",
      "description": "Visual styling options for the TextField",
      "isOptional": true,
      "defaultValue": "'inherit'"
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "size",
      "value": "\"slim\" | \"medium\"",
      "description": "Changes the size of the input, giving it more or less padding",
      "isOptional": true,
      "defaultValue": "'medium'"
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "tone",
      "value": "\"magic\"",
      "description": "Indicates the tone of the text field",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "autoSize",
      "value": "boolean",
      "description": "Whether the TextField will grow as the text within the input changes",
      "isOptional": true
    },
    {
      "filePath": "src/components/TextField/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "loading",
      "value": "boolean",
      "description": "Indicates the loading state",
      "isOptional": true
    }
  ]
}