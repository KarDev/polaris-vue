{
  "filePath": "src/components/Tabs/types.ts",
  "name": "TabProps",
  "description": "",
  "value": "export interface TabProps {\n  /** The unique identifier for the Tab */\n  id: string;\n  /** The name of the Tab */\n  content: string;\n  /** A unique identifier for the panel */\n  panelID?: string;\n  /** The accessible label for the Tab, if the name alone does not give enough context */\n  accessibilityLabel?: string;\n  /** A badge to render next to the view name */\n  badge?: string;\n  /** Optional URL if the Tab points to a location */\n  url?: string;\n  /** If true, will remove the ability to edit/rename/delete the view. */\n  isLocked?: boolean;\n  /** Whether the Tab is disabled */\n  disabled?: boolean;\n  /** A list of actions which map to actions that a merchant can take with this  */\n  actions?: TabActionDescriptor[];\n  /** Optional array that has a list of names of currently existing views. Used to check if a view name is unique. */\n  viewNames?: string[];\n  /** If true, the primary button in the currently open Modal will show a loading state */\n  isModalLoading?: boolean;\n  /** If the Tab is currently focused */\n  focused?: boolean;\n  /** If a sibling Tab currently has focus */\n  siblingTabHasFocus?: boolean;\n  /** If the Tab is selected */\n  selected?: boolean;\n  /** If the Tab is currently being measured */\n  measuring?: boolean;\n  /** Overrides the tabIndex calculated by the Tabs component */\n  tabIndexOverride?: 0 | -1;\n}",
  "members": [
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "id",
      "value": "string",
      "description": "The unique identifier for the Tab"
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "content",
      "value": "string",
      "description": "The name of the Tab"
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "panelID",
      "value": "string",
      "description": "A unique identifier for the panel",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "accessibilityLabel",
      "value": "string",
      "description": "The accessible label for the Tab, if the name alone does not give enough context",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "badge",
      "value": "string",
      "description": "A badge to render next to the view name",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "url",
      "value": "string",
      "description": "Optional URL if the Tab points to a location",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "isLocked",
      "value": "boolean",
      "description": "If true, will remove the ability to edit/rename/delete the view.",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "disabled",
      "value": "boolean",
      "description": "Whether the Tab is disabled",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "actions",
      "value": "TabActionDescriptor[]",
      "description": "A list of actions which map to actions that a merchant can take with this",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "viewNames",
      "value": "string[]",
      "description": "Optional array that has a list of names of currently existing views. Used to check if a view name is unique.",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "isModalLoading",
      "value": "boolean",
      "description": "If true, the primary button in the currently open Modal will show a loading state",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "focused",
      "value": "boolean",
      "description": "If the Tab is currently focused",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "siblingTabHasFocus",
      "value": "boolean",
      "description": "If a sibling Tab currently has focus",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "selected",
      "value": "boolean",
      "description": "If the Tab is selected",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "measuring",
      "value": "boolean",
      "description": "If the Tab is currently being measured",
      "isOptional": true
    },
    {
      "filePath": "src/components/Tabs/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "tabIndexOverride",
      "value": "0 | -1",
      "description": "Overrides the tabIndex calculated by the Tabs component",
      "isOptional": true
    }
  ]
}