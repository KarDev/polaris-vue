{
  "filePath": "src/components/Link/types.ts",
  "name": "RouteLocationOptions",
  "description": "Common options for all navigation methods.",
  "value": "export declare interface RouteLocationOptions {\n  /**\n   * Replace the entry in the history instead of pushing a new entry\n   */\n  replace?: boolean;\n  /**\n   * Triggers the navigation even if the location is the same as the current one.\n   * Note this will also add a new entry to the history unless `replace: true`\n   * is passed.\n   */\n  force?: boolean;\n  /**\n   * State to save using the History API. This cannot contain any reactive\n   * values and some primitives like Symbols are forbidden. More info at\n   * https://developer.mozilla.org/en-US/docs/Web/API/History/state\n   */\n  state?: HistoryState;\n}",
  "members": [
    {
      "filePath": "src/components/Link/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "replace",
      "value": "boolean",
      "description": "Replace the entry in the history instead of pushing a new entry",
      "isOptional": true
    },
    {
      "filePath": "src/components/Link/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "force",
      "value": "boolean",
      "description": "Triggers the navigation even if the location is the same as the current one.\nNote this will also add a new entry to the history unless `replace: true`\nis passed.",
      "isOptional": true
    },
    {
      "filePath": "src/components/Link/types.ts",
      "syntaxKind": "PropertySignature",
      "name": "state",
      "value": "HistoryState",
      "description": "State to save using the History API. This cannot contain any reactive\nvalues and some primitives like Symbols are forbidden. More info at\nhttps://developer.mozilla.org/en-US/docs/Web/API/History/state",
      "isOptional": true
    }
  ]
}